import { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';
import { ZipCityFormValue } from '../../../shared/forms/input/zip-city-input/zip-city-form-value.types';
import { now } from '../../../shared/forms/input/ngb-date-utils';
import { IsoCountryService } from '../../../shared/localities/iso-country.service';
import {
  WorkEffortApplyChannelType,
  WorkEffortApplyStatus
} from '../../../shared/backend-services/work-efforts/proof-of-work-efforts.types';

export interface ApplyChannelsFormValue {
  ELECTRONIC: boolean;
  MAIL: boolean;
  PERSONAL: boolean;
  PHONE: boolean;
}

export const formPossibleApplyChannels: WorkEffortApplyChannelType[] = Object.values(WorkEffortApplyChannelType);

export interface ApplyStatusFormValue {
  PENDING: boolean;
  REJECTED: boolean;
  EMPLOYED: boolean;
  INTERVIEW: boolean;
}

export const formPossibleApplyStatus: WorkEffortApplyStatus[] = Object.values(WorkEffortApplyStatus);

export enum WorkLoadFormOption {
  FULLTIME = 'FULLTIME',
  PARTTIME = 'PARTTIME'
}

export interface WorkEffortFormValue {
  id?: string;
  companyName: string;
  date: NgbDateStruct;
  applyChannels: ApplyChannelsFormValue;
  companyAddress?: {
    countryIsoCode: string;
    postOfficeBoxNumberOrStreet?: {
      street?: string;
      houseNumber?: string;
      postOfficeBoxNumber?: string;
    };
    zipAndCity?: ZipCityFormValue; //it's important to keep the naming this way because it's generated by a zip input
  };
  contactPerson?: string;
  companyEmailAndUrl?: {
    email?: string;
    url?: string;
  };
  phone?: string;
  occupation: string;
  appliedThroughRav: boolean;
  applyStatus: ApplyStatusFormValue;
  rejectionReason?: string;
  workload?: WorkLoadFormOption;
}

export interface WorkEffortFormInfo {
  workEffortFormValue: WorkEffortFormValue;
  readonly: boolean;
}

export const emptyWorkEffortFormValue: WorkEffortFormValue = {
  companyName: '',
  date: now(),
  applyChannels: {
    PERSONAL: null,
    PHONE: null,
    MAIL: null,
    ELECTRONIC: null
  },
  companyAddress: {
    countryIsoCode: IsoCountryService.ISO_CODE_SWITZERLAND,
  },
  appliedThroughRav: false,
  applyStatus: {
    PENDING: false,
    REJECTED: false,
    EMPLOYED: false,
    INTERVIEW: false
  },
  occupation: ''
};

